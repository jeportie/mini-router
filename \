// ************************************************************************** //
//                                                                            //
//                                                        :::      ::::::::   //
//   transition.js                                      :+:      :+:    :+:   //
//                                                    +:+ +:+         +:+     //
//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //
//                                                +#+#+#+#+#+   +#+           //
//   Created: 2025/08/22 16:00:20 by jeportie          #+#    #+#             //
//   Updated: 2025/08/22 19:12:00 by jeportie         ###   ########.fr       //
//                                                                            //
// ************************************************************************** //

/**
 * @typedef {"slide" | "fade" | "zoom" | "none"} Variant
 */

/**
 * Create a simple route transition function.
 * @param {Variant} [defaultVariant="fade"]
 */
export function createRouteTransition(defaultVariant = "fade") {
    return function transition(el, phase) {
        const state = history.state || {};
        const variant = state.trans || defaultVariant;

        // Expose variant to CSS
        el.setAttribute("data-trans", variant);

        if (variant === "none") {
            el.classList.remove("route-enter", "route-enter-active", "route-leave", "route-leave-active");
            return Promise.resolve();
        }

        return new Promise((resolve) => {
            const finish = () => {
                if (phase === "out") {
                    el.classList.remove("route-leave", "route-leave-active");
                } else {
                    el.classList.remove("route-enter", "route-enter-active");
                }
                resolve();
            };

            if (phase === "out") {
                el.classList.remove("route-enter", "route-enter-active");
                el.classList.add("route-leave");
                requestAnimationFrame(() => {
                    el.classList.add("route-leave-active");
                    el.addEventListener("transitionend", finish, { once: true });
                });
            } else {
                el.classList.remove("route-leave", "route-leave-active");
                el.classList.add("route-enter");
                requestAnimationFrame(() => {
                    el.classList.add("route-enter-active");
                    el.addEventListener("transitionend", finish, { once: true });
                });
            }
        });
    };
}

